<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wanmi.ares.report.goods.dao.GoodsTotalMapper" >

    <insert id="saveGoodsTotal">
        REPLACE INTO GOODS_TOTAL (ID, STAT_DATE, TOTAL, ADDED_TOTAL, SHOP_ID, CHECKED_TOTAL, SALE_TOTAL)
        VALUES
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.date},#{item.total},#{item.addedTotal},#{item.companyId},#{item.checkedTotal},#{item.saleTotal})
        </foreach>
    </insert>
    <delete id="deleteGoodsTotalForSelect">

        delete from GOODS_TOTAL where STAT_DATE = #{statDate};

    </delete>

    <select id="findGoodsTotal" resultType="com.wanmi.ares.report.goods.model.reponse.GoodsTotalResponse">
        SELECT
        COALESCE(sum(TOTAL),0) AS total,
        COALESCE(sum(ADDED_TOTAL),0) AS addedTotal,
        COALESCE(sum(CHECKED_TOTAL),0) AS checkedTotal,
        COALESCE(sum(SALE_TOTAL),0) AS  saleTotal
        FROM GOODS_TOTAL
        <where>
            <if test="companyId != null and companyId !=0">
                and SHOP_ID = #{companyId}
            </if>
            <if test="date != null">
                and STAT_DATE = #{date}
            </if>
        </where>
    </select>

    <insert id="saveGoodsTotalForSelect">
        INSERT INTO GOODS_TOTAL (ID, STAT_DATE, TOTAL, CHECKED_TOTAL, ADDED_TOTAL, SALE_TOTAL, SHOP_ID)
        SELECT
            CONCAT(company_info_id,',', #{statDate}),
            #{statDate},
            count(1),
            sum(checkedCount) checkedTotal,
            sum(addedCount) addedTotal,
            sum(saleCount) saleTotal,
            company_info_id
        from (
            select
                sku.company_info_id,
                case when sku.audit_status =1 then 1 else 0 end checkedCount,
                case when sku.added_flag=1 then 1 else 0 end addedCount,
                case when sku.audit_status =1 and sku.added_flag=1 and store.store_state=0 and store.contract_end_date>now()
                    then 1 else 0 end saleCount
            from replay_goods_info sku
            left join replay_store  store on(sku.store_id=store.store_id)
            where sku.del_flag=0 and store.del_flag=0
        ) a
        GROUP BY a.company_info_id

    </insert>
    <select id="queryGoodsCompanyInfoId" resultType="long" parameterType="string">
        select company_info_id as companyInfoId from replay_goods_info where goods_info_id = #{goodsInfoId}
    </select>
</mapper>